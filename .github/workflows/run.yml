name: build

on:
  release:
    types: [ created ]

jobs:
  build-win:
    runs-on: windows-latest
    strategy:
      matrix:
        platform:
          - windows/amd64
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        echo -n ${{ github.event.release.tag_name }} > assets/version.txt
        
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        flet pack main.py --icon assets/icon.ico --name ebook-downloader --distpath dist --add-data=assets/*:assets
        
        copy README.md dist
        copy LICENSE dist
        Compress-Archive -Path dist -DestinationPath dist.zip -CompressionLevel Optimal

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist.zip
        asset_name: ebook-downloader-${{ github.event.release.tag_name }}-windows.zip
        asset_content_type: application/octet-stream

  build-mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        echo -n ${{ github.event.release.tag_name }} > assets/version.txt
        
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        flet pack main.py --icon assets/icon.icns --name ebook-downloader --distpath dist --add-data=assets/*:assets
        ls -al dist/

    - name: Package .app folder
      run: |
         cd dist
         tar -czf ebook-downloader-macos.tar.gz ebook-downloader.app

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/ebook-downloader-macos.tar.gz
        asset_name: ebook-downloader-${{ github.event.release.tag_name }}-macos.tar.gz
        asset_content_type: application/octet-stream
